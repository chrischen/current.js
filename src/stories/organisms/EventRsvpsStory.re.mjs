// Generated by ReScript, PLEASE EDIT WITH CARE

import * as RescriptRelay_Query from "rescript-relay/src/RescriptRelay_Query.re.mjs";
import * as EventRsvpsStoryQuery_graphql from "../../__generated__/EventRsvpsStoryQuery_graphql.re.mjs";

var convertVariables = EventRsvpsStoryQuery_graphql.Internal.convertVariables;

var convertResponse = EventRsvpsStoryQuery_graphql.Internal.convertResponse;

var convertWrapRawResponse = EventRsvpsStoryQuery_graphql.Internal.convertWrapRawResponse;

var use = RescriptRelay_Query.useQuery(convertVariables, EventRsvpsStoryQuery_graphql.node, convertResponse);

var useLoader = RescriptRelay_Query.useLoader(convertVariables, EventRsvpsStoryQuery_graphql.node, (function (prim) {
        return prim;
      }));

var usePreloaded = RescriptRelay_Query.usePreloaded(EventRsvpsStoryQuery_graphql.node, convertResponse, (function (prim) {
        return prim;
      }));

var $$fetch = RescriptRelay_Query.$$fetch(EventRsvpsStoryQuery_graphql.node, convertResponse, convertVariables);

var fetchPromised = RescriptRelay_Query.fetchPromised(EventRsvpsStoryQuery_graphql.node, convertResponse, convertVariables);

var retain = RescriptRelay_Query.retain(EventRsvpsStoryQuery_graphql.node, convertVariables);

var EventRsvpsStoryQuery = {
  Operation: undefined,
  Types: undefined,
  convertVariables: convertVariables,
  convertResponse: convertResponse,
  convertWrapRawResponse: convertWrapRawResponse,
  use: use,
  useLoader: useLoader,
  usePreloaded: usePreloaded,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  retain: retain
};

export {
  EventRsvpsStoryQuery ,
}
/* use Not a pure module */
