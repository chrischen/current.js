// Generated by ReScript, PLEASE EDIT WITH CARE

import * as EventRsvps from "../organisms/EventRsvps.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.mjs";
import * as Core from "@linaria/core";
import * as JsxRuntime from "react/jsx-runtime";
import * as Event_event_graphql from "../../__generated__/Event_event_graphql.mjs";
import * as RescriptRelay_Fragment from "rescript-relay/src/RescriptRelay_Fragment.mjs";

import { css, cx } from '@linaria/core'
;

import { t } from '@lingui/macro'
;

var convertFragment = Event_event_graphql.Internal.convertFragment;

function use(fRef) {
  return RescriptRelay_Fragment.useFragment(Event_event_graphql.node, convertFragment, fRef);
}

function useOpt(fRef) {
  return RescriptRelay_Fragment.useFragmentOpt(fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(fRef)) : undefined, Event_event_graphql.node, convertFragment);
}

var Fragment = {
  Types: undefined,
  Operation: undefined,
  convertFragment: convertFragment,
  use: use,
  useOpt: useOpt
};

function $$Event(props) {
  var match = use(props.event);
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: (t`Event`)
                    }),
                JsxRuntime.jsx("div", {
                      className: Core.cx("grid", "grid-cols-1", "gap-y-10", "sm:grid-cols-2", "gap-x-6", "lg:grid-cols-3", "xl:gap-x-8")
                    }),
                Core__Option.getOr(match.title, "[Title missing]"),
                JsxRuntime.jsx(EventRsvps.make, {
                      users: match.fragmentRefs
                    })
              ],
              className: "bg-white"
            });
}

var make = $$Event;

var $$default = $$Event;

export {
  Fragment ,
  make ,
  $$default ,
  $$default as default,
}
/*  Not a pure module */
