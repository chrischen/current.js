// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.mjs";
import * as EventRsvpUser from "./EventRsvpUser.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as RescriptRelay_Fragment from "rescript-relay/src/RescriptRelay_Fragment.mjs";
import * as EventRsvps_event_graphql from "../../__generated__/EventRsvps_event_graphql.mjs";

import { css, cx } from '@linaria/core'
;

import { t } from '@lingui/macro'
;

var convertFragment = EventRsvps_event_graphql.Internal.convertFragment;

function use(fRef) {
  return RescriptRelay_Fragment.useFragment(EventRsvps_event_graphql.node, convertFragment, fRef);
}

function useOpt(fRef) {
  return RescriptRelay_Fragment.useFragmentOpt(fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(fRef)) : undefined, EventRsvps_event_graphql.node, convertFragment);
}

var Fragment = {
  Types: undefined,
  Operation: undefined,
  convertFragment: convertFragment,
  use: use,
  useOpt: useOpt
};

function EventRsvps(props) {
  var match = use(props.users);
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: (t`Users Attending`)
                    }),
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx("ul", {
                            children: Core__Option.getOr(Core__Option.map(match.users, (function (__x) {
                                        return __x.map(function (user) {
                                                    return JsxRuntime.jsx("li", {
                                                                children: JsxRuntime.jsx(EventRsvpUser.make, {
                                                                      user: user.fragmentRefs
                                                                    })
                                                              });
                                                  });
                                      })), [])
                          }),
                      className: (cx('grid', 'grid-cols-1', 'gap-y-10', 'sm:grid-cols-2', 'gap-x-6', 'lg:grid-cols-3', 'xl:gap-x-8'))
                    })
              ],
              className: "bg-white"
            });
}

var make = EventRsvps;

var $$default = EventRsvps;

export {
  Fragment ,
  make ,
  $$default ,
  $$default as default,
}
/*  Not a pure module */
