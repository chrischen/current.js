// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Lingui from "../../locales/Lingui.re.mjs";
import * as RelayEnv from "../../entry/RelayEnv.re.mjs";
import * as Localized from "../shared/i18n/Localized.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as CreateEventPage from "../pages/CreateEventPage.re.mjs";
import * as ReactRouterDom from "react-router-dom";
import * as CreateEventPageQuery_graphql from "../../__generated__/CreateEventPageQuery_graphql.re.mjs";

var isEmptyObj = (obj => Object.keys(obj).length === 0 && obj.constructor === Object);

function parseData(json) {
  if (isEmptyObj(json)) {
    return "Empty";
  } else {
    return {
            TAG: "Promise",
            _0: json
          };
  }
}

var LoaderArgs = {};

function loadMessages(lang) {
  var tmp = lang === "ja" ? import("../../locales/src/components/pages/CreateEventPage.re/ja") : import("../../locales/src/components/pages/CreateEventPage.re/en");
  return [tmp.then(function (messages) {
                React.startTransition(function () {
                      Lingui.i18n.load(lang, messages.messages);
                    });
              })];
}

async function loader(param) {
  var params = param.params;
  var query = Core__Option.getExn(Core__Option.map(RelayEnv.getRelayEnv(param.context, import.meta.env.SSR), (function (env) {
              return CreateEventPageQuery_graphql.load(env, {}, "store-or-network", undefined, undefined);
            })));
  if (import.meta.env.SSR) {
    await Localized.loadMessages(params.lang, loadMessages);
  }
  return ReactRouterDom.defer({
              data: query,
              i18nLoaders: import.meta.env.SSR ? undefined : Caml_option.some(Localized.loadMessages(params.lang, loadMessages))
            });
}

var Component = CreateEventPage.make;

export {
  isEmptyObj ,
  parseData ,
  Component ,
  LoaderArgs ,
  loadMessages ,
  loader ,
}
/* react Not a pure module */
